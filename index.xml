<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Diwise on Diwise for Developers</title><link>https://diwise.github.io/index.html</link><description>Recent content in Diwise on Diwise for Developers</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://diwise.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://diwise.github.io/intro/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diwise.github.io/intro/index.html</guid><description>An introduction to development, installation and deployment.</description></item><item><title>Architecture</title><link>https://diwise.github.io/architecture/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diwise.github.io/architecture/index.html</guid><description>Contents OverviewDescribes the two main logical components of diwise.
City Information PlatformHow we integrate different smart city components into a greater whole.
IoT PlatformAggregates data from different platforms.</description></item><item><title>Microservices</title><link>https://diwise.github.io/services/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diwise.github.io/services/index.html</guid><description> &amp;ldquo;A production ready microservice is documented and understood. Documentation and organizational understanding increase developer velocity while mitigating two of the most significant trade-offs that come with the adoption of microservice architecture; organizational sprawl and technical debt.&amp;rdquo; &amp;mdash; Susan J Fowler, Production Ready Microservices
This section contains documentation regarding deployment and use of our included services.
Context Broker IoT Agent IoT Core IoT Device Dashboard IoT Device Management IoT Events IoT Transform Fiware</description></item><item><title>Getting Started</title><link>https://diwise.github.io/getting-started/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diwise.github.io/getting-started/index.html</guid><description>Below is a list of the available how to&amp;rsquo;s on how to work with diwise. From setting up your development environment to guides on how to add a device, create your own decoders, or contribute to diwise.
How to Set up development environment Add a device Contribute</description></item><item><title>Deployment</title><link>https://diwise.github.io/deployment/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diwise.github.io/deployment/index.html</guid><description>Introduction The recommended way to customize and install diwise in your own environment is to create an installation manifest using kustomize, that can then be applied to your kubernetes cluster using a tool such as kubectl or oc.
In this chapter we will be walking through a basic setup, from creating the first skeleton manifest, to configuring secrets, to deployment into a test cluster. Lets go!
Requirements First, we need to make sure that we have gone over the prerequisites for installation.</description></item><item><title>Get in touch</title><link>https://diwise.github.io/contact/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diwise.github.io/contact/index.html</guid><description>If you want to request features or report a bug or problem with diwise, please submit an issue via github.com.
If you want to contribute code to diwise, please submit a pull request via github.com.
If you have any sales related questions, contact niklas.morlin@masarinconsulting.se.</description></item></channel></rss>